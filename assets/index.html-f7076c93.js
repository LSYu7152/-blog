import{_ as n,W as s,X as a,Y as p}from"./framework-d3c6dbde.js";const t={},e=p(`<h2 id="遊戲中的輸入處理" tabindex="-1"><a class="header-anchor" href="#遊戲中的輸入處理" aria-hidden="true">#</a> 遊戲中的輸入處理</h2><p>在遊戲開發中，輸入的處理是要配合邏輯運算進行的(詳見<a href="/java/4a21a4">遊戲主迴圈介紹</a>)，因此我們必須要保證輸入事件的 <strong>同步</strong>。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>一般遊戲中的輸入處理會使用到 Queue與Polling等方式，考量到複雜度問題本章節將以較簡易的方式進行。</p></div><p>在此章節中我們會使用到JFrame中的監聽輸入機制，關於監聽的機制請參考 <a href="">Observer Pattern</a></p><h2 id="於jframe中監聽鍵盤輸入" tabindex="-1"><a class="header-anchor" href="#於jframe中監聽鍵盤輸入" aria-hidden="true">#</a> 於JFrame中監聽鍵盤輸入</h2><p>JSwing中的Component類別裡有一個方法為 <strong>addKeyListener(KeyListener keyListener)</strong> ，而JFrame繼承至Component因此也能調用該方法，我們會利用這個方法來監聽電腦中的鍵盤輸入。</p><p>KeyListener中提供給我們的事件總共有三個：</p><ul><li>keyTyped: 處理鍵盤輸入文字等行為</li><li>keyPressed: 鍵盤上任一按鍵被按下的行為</li><li>keyReleased: 鍵盤上任一按鍵被放開的行為</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>為了避免pressed在使用者按到的一瞬間就觸發多次，因此按著一個按鍵時只會觸發一次Pressed事件，接著你需要等待一下才會收到一連串的Pressed事件。</p></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果只需要用到部分事件可以通過繼承 KeyAdapter類別的方式進行</p></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>jFrame<span class="token punctuation">.</span><span class="token function">addKeyListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">KeyListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">keyTyped</span><span class="token punctuation">(</span><span class="token class-name">KeyEvent</span> keyEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// 處理鍵盤輸入文字等行為</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">keyPressed</span><span class="token punctuation">(</span><span class="token class-name">KeyEvent</span> keyEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// 鍵盤上任一按鍵被按下的行為</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">keyReleased</span><span class="token punctuation">(</span><span class="token class-name">KeyEvent</span> keyEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// 鍵盤上任一按鍵被放開的行為</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="於jframe中監聽滑鼠輸入" tabindex="-1"><a class="header-anchor" href="#於jframe中監聽滑鼠輸入" aria-hidden="true">#</a> 於JFrame中監聽滑鼠輸入</h2><p>如同鍵盤輸入一樣，Component中同樣有 <strong>addMouseLitener(MouseListener mouseListener)</strong> 的方法供我們監聽滑鼠；但需要注意的是，滑鼠的監聽事件被拆為三大項：</p><ul><li>MouseListener: 滑鼠的一般行為 <ul><li>mouseClicked: 當輕點滑鼠一下不會觸發Release而是觸發clicked</li><li>mousePressed: 當按下滑鼠的按鍵時觸發</li><li>mouseReleased: 按下滑鼠一段時間後放開會觸發</li><li>mouseEntered: 滑鼠移動進入元件範圍時觸發</li><li>mouseExited: 滑鼠移動出元件範圍時觸發</li></ul></li><li>MouseMotionListener: 滑鼠的移動相關行為 <ul><li>mouseDragged:  按著滑鼠時的移動行為</li><li>mouseMoved: 放開滑鼠時的移動行為</li></ul></li><li>MouseWheelListener: 滾輪的行為 <ul><li>mouseWheelMoved: 滾輪捲動時觸發</li></ul></li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果只需要用到部分事件可以通過繼承MouseAdapter來進行，並且MouseAdapter中已經實現以上三種介面</p></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>jFrame<span class="token punctuation">.</span><span class="token function">addMouseListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MouseListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseClicked</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> mouseEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 滑鼠輕點的行為</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mousePressed</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> mouseEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// 滑鼠按下的行為</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseReleased</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> mouseEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// 滑鼠鬆開的行為(Clicked觸發時不會觸發)</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseEntered</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> mouseEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// 滑鼠進入視窗觸發</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseExited</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> mouseEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// 滑鼠離開視窗觸發</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jFrame<span class="token punctuation">.</span><span class="token function">addMouseMotionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MouseMotionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseDragged</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> mouseEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 滑鼠的按住拖曳行為</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseMoved</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> mouseEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// 滑鼠鬆開按鍵時的移動行為</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jFrame<span class="token punctuation">.</span><span class="token function">addMouseWheelListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MouseWheelListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseWheelMoved</span><span class="token punctuation">(</span><span class="token class-name">MouseWheelEvent</span> mouseWheelEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 滾輪捲動行為</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在gamekernel中加入事件的監聽" tabindex="-1"><a class="header-anchor" href="#在gamekernel中加入事件的監聽" aria-hidden="true">#</a> 在GameKernel中加入事件的監聽</h2><blockquote><p>此處以滑鼠綁定作為示範，可依照此範例自行加入鍵盤的監聽</p></blockquote><p>為了能在GameKernel的迴圈中使用到Input，我們需要將GameKernel的畫布綁定上監聽事件</p><p>並且我們要讓使用者傳入觸發監聽時他們要做的內容，因此要傳入 MouseAdapter</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">MouseAdapter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">BufferStrategy</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GameKernel</span> <span class="token keyword">extends</span> <span class="token class-name">Canvas</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> fps<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> ups<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">MouseAdapter</span> mouseAdapter<span class="token punctuation">;</span><span class="token comment">// 將監聽到滑鼠要做的事件 放入GameKernel中</span>

    <span class="token keyword">public</span> <span class="token class-name">GameKernel</span><span class="token punctuation">(</span><span class="token keyword">int</span> fps<span class="token punctuation">,</span> <span class="token keyword">int</span> ups<span class="token punctuation">,</span> <span class="token class-name">MouseAdapter</span> mouseAdapter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>fps <span class="token operator">=</span> fps<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ups <span class="token operator">=</span> ups<span class="token punctuation">;</span><span class="token comment">// 從建構子中帶入</span>
        
        <span class="token keyword">this</span><span class="token punctuation">.</span>mouseAdapter <span class="token operator">=</span> mouseAdapter<span class="token punctuation">;</span><span class="token comment">// 存入滑鼠事件</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 將事件和元件綁定，這樣才能正確的讓視窗觸發滑鼠事件並且傳出來</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	<span class="token comment">// 準備將三種滑鼠事件都跟元件做綁定</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	<span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>為了處理同步問題，我們需要將輸入的事件先全部存起來，在每次邏輯要開始更新之前才處理事件。</p><p>因此接下來我們會做一次事件的轉介處理，這一段會稍微複雜一些。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">MouseAdapter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">MouseEvent</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">BufferStrategy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GameKernel</span> <span class="token keyword">extends</span> <span class="token class-name">Canvas</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> fps<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> ups<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">MouseAdapter</span> mouseAdapter<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Event</span><span class="token punctuation">&gt;</span></span> inputs<span class="token punctuation">;</span><span class="token comment">// 將input存起來的List，Event的類別在下方</span>
    <span class="token keyword">public</span> <span class="token class-name">GameKernel</span><span class="token punctuation">(</span><span class="token keyword">int</span> fps<span class="token punctuation">,</span> <span class="token keyword">int</span> ups<span class="token punctuation">,</span> <span class="token class-name">MouseAdapter</span> mouseAdapter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>fps <span class="token operator">=</span> fps<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ups <span class="token operator">=</span> ups<span class="token punctuation">;</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>inputs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 創建ArrayList</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>mouseAdapter <span class="token operator">=</span> mouseAdapter<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MouseAdapter</span> bindAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MouseAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseClicked</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              	<span class="token comment">// 觸發就加入並存起來，並標示是Clicked/Pressed等不同事件</span>
                <span class="token class-name">GameKernel</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token class-name">Event<span class="token punctuation">.</span>MouseState<span class="token punctuation">.</span>Clicked</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mousePressed</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">GameKernel</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token class-name">Event<span class="token punctuation">.</span>MouseState<span class="token punctuation">.</span>Pressed</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseReleased</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">GameKernel</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token class-name">Event<span class="token punctuation">.</span>MouseState<span class="token punctuation">.</span>Released</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseEntered</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">GameKernel</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token class-name">Event<span class="token punctuation">.</span>MouseState<span class="token punctuation">.</span>Entered</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseExited</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">GameKernel</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token class-name">Event<span class="token punctuation">.</span>MouseState<span class="token punctuation">.</span>Exited</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseDragged</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">GameKernel</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token class-name">Event<span class="token punctuation">.</span>MouseState<span class="token punctuation">.</span>Dragged</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseMoved</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">GameKernel</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token class-name">Event<span class="token punctuation">.</span>MouseState<span class="token punctuation">.</span>Moved</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addMouseListener</span><span class="token punctuation">(</span>bindAdapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addMouseMotionListener</span><span class="token punctuation">(</span>bindAdapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Event</span> <span class="token punctuation">{</span>
      	<span class="token comment">// 為了將事件存起來，我們需要存當時觸發的滑鼠事件；以及滑鼠觸發的對應事件才能轉介給使用者的Adapter</span>
        <span class="token class-name">MouseState</span> mouseState<span class="token punctuation">;</span>
        <span class="token class-name">MouseEvent</span> e<span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token class-name">Event</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> e<span class="token punctuation">,</span> <span class="token class-name">MouseState</span> mouseState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>e <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>mouseState <span class="token operator">=</span> mouseState<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

      	<span class="token comment">// 對所有的事件種類做標記</span>
        <span class="token keyword">enum</span> <span class="token class-name">MouseState</span> <span class="token punctuation">{</span>
            <span class="token class-name">Clicked</span><span class="token punctuation">,</span>
            <span class="token class-name">Pressed</span><span class="token punctuation">,</span>
            <span class="token class-name">Released</span><span class="token punctuation">,</span>
            <span class="token class-name">Entered</span><span class="token punctuation">,</span>
            <span class="token class-name">Exited</span><span class="token punctuation">,</span>
            <span class="token class-name">Dragged</span><span class="token punctuation">,</span>
            <span class="token class-name">Moved</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>加入了儲存滑鼠事件的機制後，我們需要有消化掉已經儲存滑鼠機制的方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">consumeInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 將所有已存入的事件轉給使用者傳入的mouseAdapter去執行</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>mouseState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token class-name">Clicked</span><span class="token operator">:</span>
        <span class="token comment">// 將JFrame中的事件存入inputs, 再由inputs控制時間提供給mouseAdapter執行</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>mouseAdapter<span class="token punctuation">.</span><span class="token function">mouseClicked</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token class-name">Pressed</span><span class="token operator">:</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>mouseAdapter<span class="token punctuation">.</span><span class="token function">mousePressed</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token class-name">Released</span><span class="token operator">:</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>mouseAdapter<span class="token punctuation">.</span><span class="token function">mouseReleased</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token class-name">Entered</span><span class="token operator">:</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>mouseAdapter<span class="token punctuation">.</span><span class="token function">mouseEntered</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token class-name">Exited</span><span class="token operator">:</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>mouseAdapter<span class="token punctuation">.</span><span class="token function">mouseExited</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token class-name">Dragged</span><span class="token operator">:</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>mouseAdapter<span class="token punctuation">.</span><span class="token function">mouseDragged</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token class-name">Moved</span><span class="token operator">:</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>mouseAdapter<span class="token punctuation">.</span><span class="token function">mouseMoved</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  inputs<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 消費完後清空所有的事件</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="處理gamekernel中的輸入迴圈" tabindex="-1"><a class="header-anchor" href="#處理gamekernel中的輸入迴圈" aria-hidden="true">#</a> 處理GameKernel中的輸入迴圈</h2><p>加入遊戲迴圈中處理事件的消費機制，更新GameKernel中的run</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">long</span> nanoSecondPerFrame <span class="token operator">=</span> <span class="token number">1000000000L</span> <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fps<span class="token punctuation">;</span>
  <span class="token keyword">long</span> nanoSecondPerUpdate <span class="token operator">=</span> <span class="token number">1000000000L</span> <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ups<span class="token punctuation">;</span>

  <span class="token keyword">long</span> lastRepaintTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">long</span> startTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">long</span> passedUpdated <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> currentTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> totalTime <span class="token operator">=</span> currentTime <span class="token operator">-</span> startTime<span class="token punctuation">;</span>
    <span class="token keyword">long</span> targetTotalUpdated <span class="token operator">=</span> totalTime <span class="token operator">/</span> <span class="token punctuation">(</span>nanoSecondPerUpdate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 當準備要進行邏輯更新且有還沒被消費的事件時</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>passedUpdated <span class="token operator">&lt;</span> targetTotalUpdated <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">consumeInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 消費事件</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>passedUpdated <span class="token operator">&lt;</span> targetTotalUpdated<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      passedUpdated<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentTime <span class="token operator">-</span> lastRepaintTime <span class="token operator">&gt;=</span> nanoSecondPerFrame<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      lastRepaintTime <span class="token operator">=</span> currentTime<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最後我們在主程式中加入一個滑鼠移動偵測並印出位置，來確保有正確的監聽到事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">FRAME_PER_SECOND</span> <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">UPDATE_PER_SECOND</span> <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">JFrame</span> jFrame <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jFrame<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;Game&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jFrame<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jFrame<span class="token punctuation">.</span><span class="token function">setResizable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jFrame<span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">JFrame</span><span class="token punctuation">.</span><span class="token constant">EXIT_ON_CLOSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      	<span class="token comment">// 在GameKernel的建構子中加入滑鼠監聽事件，並覆寫滑鼠移動事件</span>
        <span class="token class-name">GameKernel</span> gameKernel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GameKernel</span><span class="token punctuation">(</span><span class="token constant">FRAME_PER_SECOND</span><span class="token punctuation">,</span> <span class="token constant">UPDATE_PER_SECOND</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MouseAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseMoved</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 印出滑鼠移動時的座標</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jFrame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>gameKernel<span class="token punctuation">)</span><span class="token punctuation">;</span>

        jFrame<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        gameKernel<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","index.html.vue"]]);export{k as default};
