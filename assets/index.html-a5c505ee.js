const e=JSON.parse('{"key":"v-4cc68f68","path":"/java/010509/","title":"列舉(Enum)","lang":"zh-TW","frontmatter":{"title":"列舉(Enum)","date":"2021-03-15T14:06:20.000Z","permalink":"/java/010509/","category":["Java","Java基礎","物件導向相關"],"tag":["程式學習"],"order":9,"description":"什麼是列舉 在Java中，時常會碰到需要指定傳入特定幾種數值的情況，如: 顏色, 種類 等。過往可能會使用常數來進行這些數值的定義，但常數仍無法實質上的限制外部開發者依照我們的需要傳入確切的數值。 而 列舉(Enum) 是一個可以將 常數組織起來進行統一管理 的方式。 列舉的本質 列舉(Enum) 本身也是一個類別，在我們使用enum語法，事實上編譯器會協助我們建立一個繼承至Enum的類別 Enum類的宣告(其中會使用到泛型語法，會在之後的篇幅介紹)","head":[["meta",{"property":"og:url","content":"https://www.ed-lin.com/java/010509/"}],["meta",{"property":"og:site_name","content":"Ed Log 工程人日誌"}],["meta",{"property":"og:title","content":"列舉(Enum)"}],["meta",{"property":"og:description","content":"什麼是列舉 在Java中，時常會碰到需要指定傳入特定幾種數值的情況，如: 顏色, 種類 等。過往可能會使用常數來進行這些數值的定義，但常數仍無法實質上的限制外部開發者依照我們的需要傳入確切的數值。 而 列舉(Enum) 是一個可以將 常數組織起來進行統一管理 的方式。 列舉的本質 列舉(Enum) 本身也是一個類別，在我們使用enum語法，事實上編譯器會協助我們建立一個繼承至Enum的類別 Enum類的宣告(其中會使用到泛型語法，會在之後的篇幅介紹)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:updated_time","content":"2023-03-02T13:04:26.000Z"}],["meta",{"property":"article:tag","content":"程式學習"}],["meta",{"property":"article:published_time","content":"2021-03-15T14:06:20.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-02T13:04:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"列舉(Enum)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-15T14:06:20.000Z\\",\\"dateModified\\":\\"2023-03-02T13:04:26.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"什麼是列舉","slug":"什麼是列舉","link":"#什麼是列舉","children":[{"level":3,"title":"列舉的本質","slug":"列舉的本質","link":"#列舉的本質","children":[]}]},{"level":2,"title":"列舉的基本使用","slug":"列舉的基本使用","link":"#列舉的基本使用","children":[{"level":3,"title":"列舉中提供的方法","slug":"列舉中提供的方法","link":"#列舉中提供的方法","children":[]},{"level":3,"title":"列舉的使用","slug":"列舉的使用","link":"#列舉的使用","children":[]}]},{"level":2,"title":"列舉的進階應用","slug":"列舉的進階應用","link":"#列舉的進階應用","children":[{"level":3,"title":"列舉中擴充方法","slug":"列舉中擴充方法","link":"#列舉中擴充方法","children":[]},{"level":3,"title":"一般方法與靜態方法","slug":"一般方法與靜態方法","link":"#一般方法與靜態方法","children":[]},{"level":3,"title":"抽象方法","slug":"抽象方法","link":"#抽象方法","children":[]}]}],"git":{"createdTime":1677762266000,"updatedTime":1677762266000,"contributors":[{"name":"LSYu7152","email":"k1207152@gmail.com","commits":1}]},"readingTime":{"minutes":3.14,"words":941},"filePathRelative":"java/01.Java基礎/05.物件導向相關/09.列舉(Enum).md","localizedDate":"2021年3月15日","excerpt":"<h2> 什麼是列舉</h2>\\n<p>在Java中，時常會碰到需要指定傳入特定幾種數值的情況，如: 顏色, 種類 等。過往可能會使用常數來進行這些數值的定義，但常數仍無法實質上的限制外部開發者依照我們的需要傳入確切的數值。</p>\\n<p>而 <strong>列舉(Enum)</strong> 是一個可以將 <strong>常數組織起來進行統一管理</strong> 的方式。</p>\\n<h3> 列舉的本質</h3>\\n<p><strong>列舉(Enum)</strong> 本身也是一個類別，在我們使用enum語法，事實上編譯器會協助我們建立一個繼承至Enum的類別</p>\\n<p>Enum類的宣告(其中會使用到泛型語法，會在之後的篇幅介紹)</p>","autoDesc":true}');export{e as data};
