const e=JSON.parse('{"key":"v-4cc68fa6","path":"/java/010508/","title":"String Pool","lang":"zh-TW","frontmatter":{"title":"String Pool","date":"2021-03-10T14:11:53.000Z","permalink":"/java/010508/","category":["Java","Java基礎","物件導向相關"],"tag":["程式學習"],"order":8,"description":"為何需要String pool 在Java中，String物件一但建立就無法改變(只能指向新的字串)，且在程式之中，String占用記憶體非常大。 因此將String使用物件池方式來管理的收益非常高。 通過 字串池(String pool) 我們可以使相同字串得以被重複利用，以進一步達到節省空間的目的。 字串池在Java中的演進 Java 6及之前 在舊版的Java中，String Pool是放在 永久代(Permgen) 之中，且呼叫 String.intern() 方法時，會將String的物件從Heap中拷貝一份放入Permgen，這樣會導致Permgen記憶體溢出(Out of memory)，因為Permgen的容量是有限且執行時期不變的。","head":[["meta",{"property":"og:url","content":"https://www.ed-lin.com/java/010508/"}],["meta",{"property":"og:site_name","content":"Ed Log 工程人日誌"}],["meta",{"property":"og:title","content":"String Pool"}],["meta",{"property":"og:description","content":"為何需要String pool 在Java中，String物件一但建立就無法改變(只能指向新的字串)，且在程式之中，String占用記憶體非常大。 因此將String使用物件池方式來管理的收益非常高。 通過 字串池(String pool) 我們可以使相同字串得以被重複利用，以進一步達到節省空間的目的。 字串池在Java中的演進 Java 6及之前 在舊版的Java中，String Pool是放在 永久代(Permgen) 之中，且呼叫 String.intern() 方法時，會將String的物件從Heap中拷貝一份放入Permgen，這樣會導致Permgen記憶體溢出(Out of memory)，因為Permgen的容量是有限且執行時期不變的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:updated_time","content":"2023-03-02T13:04:26.000Z"}],["meta",{"property":"article:tag","content":"程式學習"}],["meta",{"property":"article:published_time","content":"2021-03-10T14:11:53.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-02T13:04:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"String Pool\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-10T14:11:53.000Z\\",\\"dateModified\\":\\"2023-03-02T13:04:26.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"為何需要String pool","slug":"為何需要string-pool","link":"#為何需要string-pool","children":[]},{"level":2,"title":"字串池在Java中的演進","slug":"字串池在java中的演進","link":"#字串池在java中的演進","children":[{"level":3,"title":"Java 6及之前","slug":"java-6及之前","link":"#java-6及之前","children":[]},{"level":3,"title":"Java7","slug":"java7","link":"#java7","children":[]},{"level":3,"title":"Java 8與之後","slug":"java-8與之後","link":"#java-8與之後","children":[]}]},{"level":2,"title":"String Pool 詳解","slug":"string-pool-詳解","link":"#string-pool-詳解","children":[{"level":3,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":3,"title":"延伸觀念","slug":"延伸觀念","link":"#延伸觀念","children":[]}]},{"level":2,"title":"intern方法","slug":"intern方法","link":"#intern方法","children":[]}],"git":{"createdTime":1677762266000,"updatedTime":1677762266000,"contributors":[{"name":"LSYu7152","email":"k1207152@gmail.com","commits":1}]},"readingTime":{"minutes":3.77,"words":1132},"filePathRelative":"java/01.Java基礎/05.物件導向相關/08.String Pool.md","localizedDate":"2021年3月10日","excerpt":"<h2> 為何需要String pool</h2>\\n<p>在Java中，String物件一但建立就無法改變(只能指向新的字串)，且在程式之中，String占用記憶體非常大。</p>\\n<p>因此將String使用物件池方式來管理的收益非常高。</p>\\n<p>通過 <strong>字串池(String pool)</strong> 我們可以使相同字串得以被重複利用，以進一步達到節省空間的目的。</p>\\n<h2> 字串池在Java中的演進</h2>\\n<h3> Java 6及之前</h3>\\n<p>在舊版的Java中，String Pool是放在 <strong>永久代(Permgen)</strong> 之中，且呼叫 <a href=\\"#intern%E6%96%B9%E6%B3%95\\">String.intern()</a> 方法時，會將String的物件從Heap中拷貝一份放入Permgen，這樣會導致Permgen記憶體溢出(Out of memory)，因為Permgen的容量是有限且執行時期不變的。</p>","autoDesc":true}');export{e as data};
