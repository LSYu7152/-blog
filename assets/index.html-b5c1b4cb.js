const n=JSON.parse('{"key":"v-3f24575c","path":"/java/050004/","title":"Game Loop - 繪圖迴圈","lang":"zh-TW","frontmatter":{"title":"Game Loop - 繪圖迴圈","date":"2021-03-19T19:12:34.000Z","permalink":"/java/050004/","category":["Java","Java遊戲開發"],"tag":["程式學習"],"order":4,"description":"Step1: 迴圈上控制每秒渲染張數(FPS) 我們使用 遊戲核心建置章節中的繪製迴圈 來接著進行改寫 import javax.swing.*; public class Main { public static void main(String[] args) { JFrame jFrame = new JFrame(); jFrame.setTitle(\\"Game\\"); jFrame.setSize(800, 600); jFrame.setResizable(false); jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); GameKernel gameKernel = new GameKernel(); jFrame.add(gameKernel); jFrame.setVisible(true); long nanoSecondPerFrame = 1000000000L / 60;// 每秒六十幀的話 每幀要耗費 1000000000 / 60奈秒 long lastRepaintTime = System.nanoTime();// 最後一次畫的時間 while (true) { long curentTime = System.nanoTime();// 當前時間 \\t// 當前時間 - 最後一次畫的時間 = 經過的間隔 \\t// 經過的間隔如果已經超過了需要畫的間隔秒數，就進行畫圖 if (curentTime - lastRepaintTime &gt;= nanoSecondPerFrame) { lastRepaintTime = curentTime;// 更新最後一次畫的時間 gameKernel.paint();// 畫圖 } } } }","head":[["meta",{"property":"og:url","content":"https://www.ed-lin.com/java/050004/"}],["meta",{"property":"og:site_name","content":"Ed Log 工程人日誌"}],["meta",{"property":"og:title","content":"Game Loop - 繪圖迴圈"}],["meta",{"property":"og:description","content":"Step1: 迴圈上控制每秒渲染張數(FPS) 我們使用 遊戲核心建置章節中的繪製迴圈 來接著進行改寫 import javax.swing.*; public class Main { public static void main(String[] args) { JFrame jFrame = new JFrame(); jFrame.setTitle(\\"Game\\"); jFrame.setSize(800, 600); jFrame.setResizable(false); jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); GameKernel gameKernel = new GameKernel(); jFrame.add(gameKernel); jFrame.setVisible(true); long nanoSecondPerFrame = 1000000000L / 60;// 每秒六十幀的話 每幀要耗費 1000000000 / 60奈秒 long lastRepaintTime = System.nanoTime();// 最後一次畫的時間 while (true) { long curentTime = System.nanoTime();// 當前時間 \\t// 當前時間 - 最後一次畫的時間 = 經過的間隔 \\t// 經過的間隔如果已經超過了需要畫的間隔秒數，就進行畫圖 if (curentTime - lastRepaintTime &gt;= nanoSecondPerFrame) { lastRepaintTime = curentTime;// 更新最後一次畫的時間 gameKernel.paint();// 畫圖 } } } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:updated_time","content":"2023-03-02T13:04:26.000Z"}],["meta",{"property":"article:tag","content":"程式學習"}],["meta",{"property":"article:published_time","content":"2021-03-19T19:12:34.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-02T13:04:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Game Loop - 繪圖迴圈\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-19T19:12:34.000Z\\",\\"dateModified\\":\\"2023-03-02T13:04:26.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Step1: 迴圈上控制每秒渲染張數(FPS)","slug":"step1-迴圈上控制每秒渲染張數-fps","link":"#step1-迴圈上控制每秒渲染張數-fps","children":[]},{"level":2,"title":"Step2: 責任歸屬整理","slug":"step2-責任歸屬整理","link":"#step2-責任歸屬整理","children":[]},{"level":2,"title":"章節小結","slug":"章節小結","link":"#章節小結","children":[]}],"git":{"createdTime":1677762266000,"updatedTime":1677762266000,"contributors":[{"name":"LSYu7152","email":"k1207152@gmail.com","commits":1}]},"readingTime":{"minutes":2.49,"words":748},"filePathRelative":"java/05.Java遊戲開發/04.Game Loop - 繪圖迴圈.md","localizedDate":"2021年3月20日","excerpt":"<h2> Step1: 迴圈上控制每秒渲染張數(FPS)</h2>\\n<p>我們使用 <a href=\\"/java/5c9cf8\\">遊戲核心建置章節中的繪製迴圈</a> 來接著進行改寫</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">javax<span class=\\"token punctuation\\">.</span>swing<span class=\\"token punctuation\\">.</span></span><span class=\\"token operator\\">*</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Main</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">JFrame</span> jFrame <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">JFrame</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        jFrame<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setTitle</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Game\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        jFrame<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setSize</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">800</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">600</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        jFrame<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setResizable</span><span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        jFrame<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setDefaultCloseOperation</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">JFrame</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">EXIT_ON_CLOSE</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token class-name\\">GameKernel</span> gameKernel <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">GameKernel</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        jFrame<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>gameKernel<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        jFrame<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setVisible</span><span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">long</span> nanoSecondPerFrame <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1000000000L</span> <span class=\\"token operator\\">/</span> <span class=\\"token number\\">60</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">// 每秒六十幀的話 每幀要耗費 1000000000 / 60奈秒</span>\\n        <span class=\\"token keyword\\">long</span> lastRepaintTime <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">nanoTime</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">// 最後一次畫的時間</span>\\n        <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">long</span> curentTime <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">nanoTime</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">// 當前時間</span>\\n\\n          \\t<span class=\\"token comment\\">// 當前時間 - 最後一次畫的時間 = 經過的間隔</span>\\n          \\t<span class=\\"token comment\\">// 經過的間隔如果已經超過了需要畫的間隔秒數，就進行畫圖</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>curentTime <span class=\\"token operator\\">-</span> lastRepaintTime <span class=\\"token operator\\">&gt;=</span> nanoSecondPerFrame<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                lastRepaintTime <span class=\\"token operator\\">=</span> curentTime<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">// 更新最後一次畫的時間</span>\\n                gameKernel<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">paint</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">// 畫圖</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
