const e=JSON.parse('{"key":"v-4cc6911a","path":"/java/010502/","title":"Java中的物件導向","lang":"zh-TW","frontmatter":{"title":"Java中的物件導向","date":"2021-02-24T18:05:16.000Z","permalink":"/java/010502/","category":["Java","Java基礎","物件導向相關"],"tag":["程式學習"],"order":2,"description":"Java中的類別與物件 類別 在Java中，類別(class) 主要包含了 屬性 與 方法 ，可以理解為屬性是類別中的變數，方法是類別中的函式。 我們可以通過不同型態的屬性以及包含不同行為的方法，將類別組成一個自定義的資料形式來使用。 宣告類別的基本語法 [存取修飾詞] [修飾詞] class 類別名稱 [extends 父類別名稱] [implements 介面名稱, 第二個介面名稱...] { [存取修飾詞] [修飾詞] 資料型態 變數名稱1; [存取修飾詞] [修飾詞] 資料型態 變數名稱2; ... .. [存取修飾詞] [修飾詞] 回傳值資料型態 方法名稱1([參數宣告]) { \\t\\t... } ... .. }","head":[["meta",{"property":"og:url","content":"https://www.ed-lin.com/java/010502/"}],["meta",{"property":"og:site_name","content":"Ed Log 工程人日誌"}],["meta",{"property":"og:title","content":"Java中的物件導向"}],["meta",{"property":"og:description","content":"Java中的類別與物件 類別 在Java中，類別(class) 主要包含了 屬性 與 方法 ，可以理解為屬性是類別中的變數，方法是類別中的函式。 我們可以通過不同型態的屬性以及包含不同行為的方法，將類別組成一個自定義的資料形式來使用。 宣告類別的基本語法 [存取修飾詞] [修飾詞] class 類別名稱 [extends 父類別名稱] [implements 介面名稱, 第二個介面名稱...] { [存取修飾詞] [修飾詞] 資料型態 變數名稱1; [存取修飾詞] [修飾詞] 資料型態 變數名稱2; ... .. [存取修飾詞] [修飾詞] 回傳值資料型態 方法名稱1([參數宣告]) { \\t\\t... } ... .. }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:updated_time","content":"2023-03-02T13:04:26.000Z"}],["meta",{"property":"article:tag","content":"程式學習"}],["meta",{"property":"article:published_time","content":"2021-02-24T18:05:16.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-02T13:04:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java中的物件導向\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-02-24T18:05:16.000Z\\",\\"dateModified\\":\\"2023-03-02T13:04:26.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Java中的類別與物件","slug":"java中的類別與物件","link":"#java中的類別與物件","children":[{"level":3,"title":"類別","slug":"類別","link":"#類別","children":[]},{"level":3,"title":"物件","slug":"物件","link":"#物件","children":[]}]},{"level":2,"title":"Java中的存取修飾詞與非存取修飾詞","slug":"java中的存取修飾詞與非存取修飾詞","link":"#java中的存取修飾詞與非存取修飾詞","children":[{"level":3,"title":"Java中的存取修飾詞","slug":"java中的存取修飾詞","link":"#java中的存取修飾詞","children":[]},{"level":3,"title":"Java中的非存取修飾詞","slug":"java中的非存取修飾詞","link":"#java中的非存取修飾詞","children":[]}]}],"git":{"createdTime":1677762266000,"updatedTime":1677762266000,"contributors":[{"name":"LSYu7152","email":"k1207152@gmail.com","commits":1}]},"readingTime":{"minutes":8.23,"words":2468},"filePathRelative":"java/01.Java基礎/05.物件導向相關/02.Java中的物件導向.md","localizedDate":"2021年2月25日","excerpt":"<h2> Java中的類別與物件</h2>\\n<h3> 類別</h3>\\n<p>在Java中，<strong>類別(class)</strong> 主要包含了 <strong>屬性</strong> 與 <strong>方法</strong> ，可以理解為屬性是類別中的變數，方法是類別中的函式。</p>\\n<p>我們可以通過不同型態的屬性以及包含不同行為的方法，將類別組成一個自定義的資料形式來使用。</p>\\n<h4> 宣告類別的基本語法</h4>\\n<div class=\\"language-pseudocode line-numbers-mode\\" data-ext=\\"pseudocode\\"><pre class=\\"language-pseudocode\\"><code>[存取修飾詞] [修飾詞] class 類別名稱 [extends 父類別名稱] [implements 介面名稱, 第二個介面名稱...] {\\n    [存取修飾詞] [修飾詞] 資料型態 變數名稱1;\\n    [存取修飾詞] [修飾詞] 資料型態 變數名稱2;\\n    ...\\n    ..\\n    [存取修飾詞] [修飾詞] 回傳值資料型態 方法名稱1([參數宣告]) {\\n    \\t\\t...\\n    }\\n    ...\\n    ..\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
