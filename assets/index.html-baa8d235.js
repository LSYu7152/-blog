import{_ as s,W as t,X as e,Z as p,Y as n,D as o}from"./framework-d3c6dbde.js";const i={},c=n(`<h2 id="介紹" tabindex="-1"><a class="header-anchor" href="#介紹" aria-hidden="true">#</a> 介紹</h2><p>在Java中，被執行的敘述可以簡單地被歸類為兩種：</p><ul><li>一個動作的執行(計算/呼叫/賦值)</li><li>條件判斷</li></ul><p>在本節中主要要介紹的就是 <strong>條件判斷</strong> 的基礎，也是在開發中非常常用到的一個功能。</p><p>條件判斷本身分為兩個部分：</p><ul><li>條件(condition): 判斷是否符合條件</li><li>執行內容(body): 如果符合條件的話執行的內容</li></ul><h2 id="if-敘述" tabindex="-1"><a class="header-anchor" href="#if-敘述" aria-hidden="true">#</a> If 敘述</h2><p>最常使用到也是最為基本的條件敘述就是 <strong>If 敘述</strong> ，先看一段範例程式碼</p><h3 id="範例程式" tabindex="-1"><a class="header-anchor" href="#範例程式" aria-hidden="true">#</a> 範例程式</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        
        <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">&quot; 相等於 &quot;</span> <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="程式說明" tabindex="-1"><a class="header-anchor" href="#程式說明" aria-hidden="true">#</a> 程式說明</h3><p>簡單的將敘述拆成兩個部份來進行說明 :</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span><span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面的程式便是進行判斷的 <strong>條件</strong> ，條件會被 <strong>小括號包裹</strong> 我們可以想像成 if後的小括號內它需要的是一個 <strong>boolean值</strong> ，而 a == b 計算後我們會得到 <strong>true/false</strong> 兩種結果(即boolean)，而當這個結果為 true時，便會執行大括號中的內容，反之則不會執行。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">&quot; 相等於 &quot;</span> <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的程式便是執行的內容，執行的內容會被 <strong>大括號</strong> 包裹，當if後小括號中的條件成立時，系統便會執行這個大括號中的內容。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果內容中的敘述只有一行，則大括號可以被省略(通常不建議省略)</p></div><h3 id="流程圖" tabindex="-1"><a class="header-anchor" href="#流程圖" aria-hidden="true">#</a> 流程圖</h3>`,18),d=n('<h2 id="關係運算子" tabindex="-1"><a class="header-anchor" href="#關係運算子" aria-hidden="true">#</a> 關係運算子</h2><p>瞭解了if判斷式後，我們必須要知道有那些 運算符號( <strong>關係運算子</strong> )可以用來判斷數值之間的關係。</p><p>以下是一個簡單的關係運算子表格</p><table><thead><tr><th>關係運算子</th><th>意義</th><th>使用範例</th><th>說明</th></tr></thead><tbody><tr><td>==</td><td>等於</td><td>x==y</td><td>比較x是否等於y</td></tr><tr><td>!=</td><td>不等於</td><td>x!=y</td><td>比較x是否不等於y</td></tr><tr><td>&gt;</td><td>大於</td><td>x&gt;y</td><td>比較x是否大於y</td></tr><tr><td>&lt;</td><td>小於</td><td>x&lt;y</td><td>比較x是否小於y</td></tr><tr><td>&gt;=</td><td>大於等於</td><td>x&gt;=y</td><td>比較x是否大於等於y</td></tr><tr><td>&lt;=</td><td>小於等於</td><td>x&lt;=y</td><td>比較x是否小於等於y</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在程式中，單一個 =符號為賦值運算子，因此判斷相等時我們使用 ==，需要特別注意</p></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>關係運算子如果有多個符號中間不能留空白，如 = =</p></div>',6);function l(r,u){const a=o("FlowChart");return t(),e("div",null,[c,p(a,{id:"flowchart-68",code:"eJzjKi6xtSsuSSwqsVIIBlFcyfl5KbZ2IDKzJDM/z0ohUeHZjPVPJyx7vrbz2bQ9Cklc+QW2dvkFqUWJEPmnvRuetu9SUDJUeD57B1SRoRJXqq1dal4KF9ACXbBpYIM1KlOLNXWBunXtUiECeflAfioXFwA2MzWu",preset:"vue"}),d])}const h=s(i,[["render",l],["__file","index.html.vue"]]);export{h as default};
