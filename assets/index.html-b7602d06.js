const n=JSON.parse('{"key":"v-3f2456a2","path":"/java/050007/","title":"Game Loop - 調整並封裝核心","lang":"zh-TW","frontmatter":{"title":"Game Loop - 調整並封裝核心","date":"2021-03-24T10:34:14.000Z","permalink":"/java/050007/","category":["Java","Java遊戲開發"],"tag":["程式學習"],"order":7,"description":"遊戲核心的封裝 在三個主要的遊戲機制都被處理過後，我們需要將遊戲的核心進行封裝。對於實際上遊戲開發中所需要繪製的遊戲內容，以及要處理的遊戲邏輯，我們要將他們從遊戲核心中抽出。 為了達到這個目的，我們需要利用介面來達成 外面實現內容，遊戲核心負責決定執行的時機 的效果。 import java.awt.*; import java.awt.event.MouseAdapter; import java.awt.event.MouseEvent; import java.awt.image.BufferStrategy; import java.util.ArrayList; public class GameKernel extends Canvas { private int fps; private int ups; private MouseAdapter mouseAdapter; private ArrayList&lt;Event&gt; inputs; private GameInterface gameInterface;// 遊戲介面 public GameKernel(int fps, int ups, GameInterface gameInterface, MouseAdapter mouseAdapter) { this.fps = fps; this.ups = ups; this.gameInterface = gameInterface;// 將傳入的介面存起來 this.inputs = new ArrayList&lt;&gt;(); this.mouseAdapter = mouseAdapter; this.bind(); } private void bind() {...} public void run() { long nanoSecondPerFrame = 1000000000L / this.fps; long nanoSecondPerUpdate = 1000000000L / this.ups; long lastRepaintTime = System.nanoTime(); long startTime = System.nanoTime(); long passedUpdated = 0; while (true) { long currentTime = System.nanoTime(); long totalTime = currentTime - startTime; long targetTotalUpdated = totalTime / (nanoSecondPerUpdate); if (passedUpdated &lt; targetTotalUpdated &amp;&amp; this.inputs.size() != 0) { this.consumeInput(); } while (passedUpdated &lt; targetTotalUpdated) { this.gameInterface.update();// 更新改為執行外面傳入的介面實現 passedUpdated++; } if (currentTime - lastRepaintTime &gt;= nanoSecondPerFrame) { lastRepaintTime = currentTime; this.paint(); } } } private void consumeInput() {...} private void paint() { BufferStrategy bs = this.getBufferStrategy(); if (bs == null) { this.createBufferStrategy(3); return; } Graphics g = bs.getDrawGraphics(); g.fillRect(0, 0, this.getWidth(), this.getHeight()); this.gameInterface.paint(g);// 繪圖改為執行外面傳入的介面實現 g.dispose(); bs.show(); } \\t// 新增一個處理更新跟繪圖用的介面 public interface GameInterface { void update(); void paint(Graphics g); } private static class Event {...} }","head":[["meta",{"property":"og:url","content":"https://www.ed-lin.com/java/050007/"}],["meta",{"property":"og:site_name","content":"Ed Log 工程人日誌"}],["meta",{"property":"og:title","content":"Game Loop - 調整並封裝核心"}],["meta",{"property":"og:description","content":"遊戲核心的封裝 在三個主要的遊戲機制都被處理過後，我們需要將遊戲的核心進行封裝。對於實際上遊戲開發中所需要繪製的遊戲內容，以及要處理的遊戲邏輯，我們要將他們從遊戲核心中抽出。 為了達到這個目的，我們需要利用介面來達成 外面實現內容，遊戲核心負責決定執行的時機 的效果。 import java.awt.*; import java.awt.event.MouseAdapter; import java.awt.event.MouseEvent; import java.awt.image.BufferStrategy; import java.util.ArrayList; public class GameKernel extends Canvas { private int fps; private int ups; private MouseAdapter mouseAdapter; private ArrayList&lt;Event&gt; inputs; private GameInterface gameInterface;// 遊戲介面 public GameKernel(int fps, int ups, GameInterface gameInterface, MouseAdapter mouseAdapter) { this.fps = fps; this.ups = ups; this.gameInterface = gameInterface;// 將傳入的介面存起來 this.inputs = new ArrayList&lt;&gt;(); this.mouseAdapter = mouseAdapter; this.bind(); } private void bind() {...} public void run() { long nanoSecondPerFrame = 1000000000L / this.fps; long nanoSecondPerUpdate = 1000000000L / this.ups; long lastRepaintTime = System.nanoTime(); long startTime = System.nanoTime(); long passedUpdated = 0; while (true) { long currentTime = System.nanoTime(); long totalTime = currentTime - startTime; long targetTotalUpdated = totalTime / (nanoSecondPerUpdate); if (passedUpdated &lt; targetTotalUpdated &amp;&amp; this.inputs.size() != 0) { this.consumeInput(); } while (passedUpdated &lt; targetTotalUpdated) { this.gameInterface.update();// 更新改為執行外面傳入的介面實現 passedUpdated++; } if (currentTime - lastRepaintTime &gt;= nanoSecondPerFrame) { lastRepaintTime = currentTime; this.paint(); } } } private void consumeInput() {...} private void paint() { BufferStrategy bs = this.getBufferStrategy(); if (bs == null) { this.createBufferStrategy(3); return; } Graphics g = bs.getDrawGraphics(); g.fillRect(0, 0, this.getWidth(), this.getHeight()); this.gameInterface.paint(g);// 繪圖改為執行外面傳入的介面實現 g.dispose(); bs.show(); } \\t// 新增一個處理更新跟繪圖用的介面 public interface GameInterface { void update(); void paint(Graphics g); } private static class Event {...} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:updated_time","content":"2023-03-02T13:04:26.000Z"}],["meta",{"property":"article:tag","content":"程式學習"}],["meta",{"property":"article:published_time","content":"2021-03-24T10:34:14.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-02T13:04:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Game Loop - 調整並封裝核心\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-24T10:34:14.000Z\\",\\"dateModified\\":\\"2023-03-02T13:04:26.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"遊戲核心的封裝","slug":"遊戲核心的封裝","link":"#遊戲核心的封裝","children":[]}],"git":{"createdTime":1677762266000,"updatedTime":1677762266000,"contributors":[{"name":"LSYu7152","email":"k1207152@gmail.com","commits":1}]},"readingTime":{"minutes":1.67,"words":502},"filePathRelative":"java/05.Java遊戲開發/07.Game Loop - 調整並封裝核心.md","localizedDate":"2021年3月24日","excerpt":"<h2> 遊戲核心的封裝</h2>\\n<p>在三個主要的遊戲機制都被處理過後，我們需要將遊戲的核心進行封裝。對於實際上遊戲開發中所需要繪製的遊戲內容，以及要處理的遊戲邏輯，我們要將他們從遊戲核心中抽出。</p>\\n<p>為了達到這個目的，我們需要利用介面來達成 <strong>外面實現內容，遊戲核心負責決定執行的時機</strong> 的效果。</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>awt<span class=\\"token punctuation\\">.</span></span><span class=\\"token operator\\">*</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>awt<span class=\\"token punctuation\\">.</span>event<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">MouseAdapter</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>awt<span class=\\"token punctuation\\">.</span>event<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">MouseEvent</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>awt<span class=\\"token punctuation\\">.</span>image<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">BufferStrategy</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>util<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">ArrayList</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">GameKernel</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">Canvas</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">int</span> fps<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">int</span> ups<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">MouseAdapter</span> mouseAdapter<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">ArrayList</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">Event</span><span class=\\"token punctuation\\">&gt;</span></span> inputs<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">GameInterface</span> gameInterface<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">// 遊戲介面</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">GameKernel</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> fps<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> ups<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">GameInterface</span> gameInterface<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">MouseAdapter</span> mouseAdapter<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>fps <span class=\\"token operator\\">=</span> fps<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>ups <span class=\\"token operator\\">=</span> ups<span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>gameInterface <span class=\\"token operator\\">=</span> gameInterface<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">// 將傳入的介面存起來</span>\\n\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>inputs <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ArrayList</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mouseAdapter <span class=\\"token operator\\">=</span> mouseAdapter<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">long</span> nanoSecondPerFrame <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1000000000L</span> <span class=\\"token operator\\">/</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>fps<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">long</span> nanoSecondPerUpdate <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1000000000L</span> <span class=\\"token operator\\">/</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>ups<span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">long</span> lastRepaintTime <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">nanoTime</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">long</span> startTime <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">nanoTime</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">long</span> passedUpdated <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">long</span> currentTime <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">nanoTime</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">long</span> totalTime <span class=\\"token operator\\">=</span> currentTime <span class=\\"token operator\\">-</span> startTime<span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">long</span> targetTotalUpdated <span class=\\"token operator\\">=</span> totalTime <span class=\\"token operator\\">/</span> <span class=\\"token punctuation\\">(</span>nanoSecondPerUpdate<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>passedUpdated <span class=\\"token operator\\">&lt;</span> targetTotalUpdated <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>inputs<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">size</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">!=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">consumeInput</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>passedUpdated <span class=\\"token operator\\">&lt;</span> targetTotalUpdated<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>gameInterface<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">update</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">// 更新改為執行外面傳入的介面實現</span>\\n                passedUpdated<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>currentTime <span class=\\"token operator\\">-</span> lastRepaintTime <span class=\\"token operator\\">&gt;=</span> nanoSecondPerFrame<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                lastRepaintTime <span class=\\"token operator\\">=</span> currentTime<span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">paint</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">consumeInput</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">paint</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">BufferStrategy</span> bs <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBufferStrategy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>bs <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createBufferStrategy</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token class-name\\">Graphics</span> g <span class=\\"token operator\\">=</span> bs<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getDrawGraphics</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        g<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fillRect</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getWidth</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getHeight</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>gameInterface<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">paint</span><span class=\\"token punctuation\\">(</span>g<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">// 繪圖改為執行外面傳入的介面實現</span>\\n\\n        g<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">dispose</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        bs<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">show</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n  \\t<span class=\\"token comment\\">// 新增一個處理更新跟繪圖用的介面</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">GameInterface</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">update</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">paint</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Graphics</span> g<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Event</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
