const n=JSON.parse('{"key":"v-4cc68fe4","path":"/java/010507/","title":"匿名內部類別與Lambda與Closure","lang":"zh-TW","frontmatter":{"title":"匿名內部類別與Lambda與Closure","date":"2021-03-08T09:17:55.000Z","permalink":"/java/010507/","category":["Java","Java基礎","物件導向相關"],"tag":["程式學習"],"order":7,"description":"匿名內部類別 使用情境 在講匿名內部類別前，我們先看一個介面的實踐範例 public interface Comparator { // 創建一個介面 其中的方法用來比較兩個整數 int compareTo(int a, int b); } public class AComparator implements Comparator { @Override public int compareTo(int a, int b) { // 創建一個類別A介面利用直接相減來比較 =&gt; 比 比較大的 return a - b; } } public class BComparator implements Comparator { @Override public int compareTo(int a, int b) { // 創建一個類別B介面改為b - a =&gt; 比 比較小的 return b - a; } } public class Main { public static void main(final String[] args) { int a = 5; int b = 3; System.out.println(new AComparator().compareTo(a, b));// 創建其中一個類別並且呼叫比較的方法取得結果 } }","head":[["meta",{"property":"og:url","content":"https://www.ed-lin.com/java/010507/"}],["meta",{"property":"og:site_name","content":"Ed Log 工程人日誌"}],["meta",{"property":"og:title","content":"匿名內部類別與Lambda與Closure"}],["meta",{"property":"og:description","content":"匿名內部類別 使用情境 在講匿名內部類別前，我們先看一個介面的實踐範例 public interface Comparator { // 創建一個介面 其中的方法用來比較兩個整數 int compareTo(int a, int b); } public class AComparator implements Comparator { @Override public int compareTo(int a, int b) { // 創建一個類別A介面利用直接相減來比較 =&gt; 比 比較大的 return a - b; } } public class BComparator implements Comparator { @Override public int compareTo(int a, int b) { // 創建一個類別B介面改為b - a =&gt; 比 比較小的 return b - a; } } public class Main { public static void main(final String[] args) { int a = 5; int b = 3; System.out.println(new AComparator().compareTo(a, b));// 創建其中一個類別並且呼叫比較的方法取得結果 } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:updated_time","content":"2023-03-02T13:04:26.000Z"}],["meta",{"property":"article:tag","content":"程式學習"}],["meta",{"property":"article:published_time","content":"2021-03-08T09:17:55.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-02T13:04:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"匿名內部類別與Lambda與Closure\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-08T09:17:55.000Z\\",\\"dateModified\\":\\"2023-03-02T13:04:26.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"匿名內部類別","slug":"匿名內部類別","link":"#匿名內部類別","children":[{"level":3,"title":"使用情境","slug":"使用情境","link":"#使用情境","children":[]},{"level":3,"title":"觀念","slug":"觀念","link":"#觀念","children":[]},{"level":3,"title":"使用案例","slug":"使用案例","link":"#使用案例","children":[]},{"level":3,"title":"引用外部變數","slug":"引用外部變數","link":"#引用外部變數","children":[]}]},{"level":2,"title":"Lambda表示式 (Java 8)","slug":"lambda表示式-java-8","link":"#lambda表示式-java-8","children":[{"level":3,"title":"Lambda介紹","slug":"lambda介紹","link":"#lambda介紹","children":[]},{"level":3,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":3,"title":"方法引用","slug":"方法引用","link":"#方法引用","children":[]},{"level":3,"title":"Lambda的實現細節","slug":"lambda的實現細節","link":"#lambda的實現細節","children":[]}]},{"level":2,"title":"補充: Closure","slug":"補充-closure","link":"#補充-closure","children":[]}],"git":{"createdTime":1677762266000,"updatedTime":1677762266000,"contributors":[{"name":"LSYu7152","email":"k1207152@gmail.com","commits":1}]},"readingTime":{"minutes":8.61,"words":2582},"filePathRelative":"java/01.Java基礎/05.物件導向相關/07.匿名內部類別與Lambda與Closure.md","localizedDate":"2021年3月8日","excerpt":"<h2> 匿名內部類別</h2>\\n<h3> 使用情境</h3>\\n<p>在講匿名內部類別前，我們先看一個介面的實踐範例</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">Comparator</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 創建一個介面 其中的方法用來比較兩個整數</span>\\n    <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">compareTo</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> a<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">AComparator</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">Comparator</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">compareTo</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> a<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> b<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 創建一個類別A介面利用直接相減來比較 =&gt; 比 比較大的</span>\\n        <span class=\\"token keyword\\">return</span> a <span class=\\"token operator\\">-</span> b<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">BComparator</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">Comparator</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">compareTo</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> a<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> b<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 創建一個類別B介面改為b - a =&gt; 比 比較小的</span>\\n        <span class=\\"token keyword\\">return</span> b <span class=\\"token operator\\">-</span> a<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Main</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">final</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">int</span> a <span class=\\"token operator\\">=</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">int</span> b <span class=\\"token operator\\">=</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">AComparator</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">compareTo</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span> b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">// 創建其中一個類別並且呼叫比較的方法取得結果</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
